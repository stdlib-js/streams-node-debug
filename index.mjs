// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/streams-node-inspect@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.1.1-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-buffer@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/object-assign@v0.1.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-inherit@v0.1.1-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import{isPrimitive as d}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.1.1-esm/index.mjs";import{isPrimitive as m}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-number@v0.1.1-esm/index.mjs";import{isPrimitive as p}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.1.1-esm/index.mjs";function u(e){if(e.__esModule)return e;var t=e.default;if("function"==typeof t){var n=function e(){if(this instanceof e){var n=[null];n.push.apply(n,arguments);var r=Function.bind.apply(t,n);return new r}return t.apply(this,arguments)};n.prototype=t.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(e).forEach((function(t){var r=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(n,t,r.get?r:{enumerable:!0,get:function(){return e[t]}})})),n}var b=u(Object.freeze({__proto__:null,default:()=>()=>{}})),f=b("debug-stream"),c={objectMode:!1,allowHalfOpen:!1,readableObjectMode:!1,name:""};function h(e,t){return a(t)?l(t,"name")&&(e.name=t.name,!p(e.name))?new TypeError(i("invalid option. `%s` option must be a string. Option: `%s`.","name",e.name)):l(t,"objectMode")&&(e.objectMode=t.objectMode,!d(e.objectMode))?new TypeError(i("invalid option. `%s` option must be a boolean. Option: `%s`.","objectMode",e.objectMode)):l(t,"readableObjectMode")&&(e.readableObjectMode=t.readableObjectMode,!d(e.readableObjectMode))?new TypeError(i("invalid option. `%s` option must be a boolean. Option: `%s`.","readableObjectMode",e.readableObjectMode)):l(t,"allowHalfOpen")&&(e.allowHalfOpen=t.allowHalfOpen,!d(e.allowHalfOpen))?new TypeError(i("invalid option. `%s` option must be a boolean. Option: `%s`.","allowHalfOpen",e.allowHalfOpen)):l(t,"highWaterMark")&&(e.highWaterMark=t.highWaterMark,!m(e.highWaterMark))?new TypeError(i("invalid option. `%s` option must be a nonnegative number. Option: `%s`.","highWaterMark",e.highWaterMark)):null:new TypeError(i("invalid argument. Options argument must be an object. Value: `%s`.",t))}var j=b;function g(e,o){var a,l,d,m,p;if(!(this instanceof g))return arguments.length>1?new g(e,o):1===arguments.length?new g(e):new g;if(a=s({},c),arguments.length>1){if(!n(o))throw new TypeError(i("invalid argument. Callback argument must be a function. Value: `%s`.",o));p=o,m=h(a,e)}else arguments.length&&(n(e)?p=e:m=h(a,e));if(m)throw m;return l=a.name?"debug-stream:"+a.name:"debug-stream",d=j(l),f("Creating a transform stream configured with the following options: %s.",JSON.stringify(a)),t.call(this,a,u),this;function u(e,t){if(p)return f("Received a new chunk. Chunk: %s. Index: %d.",e.toString(),t),p(d,e,t);r(e)&&(e=e.toString()),e=JSON.stringify(e),f("Received a new chunk. Chunk: %s. Index: %d.",e,t),d("Chunk: %s. Index: %d.",e,t)}}function v(e,t){var r,o;if(arguments.length>1){if(!a(e))throw new TypeError(i("invalid argument. Options argument must be an object. Value: `%s`.",e));if(r=s({},e),o=t,!n(t))throw new TypeError(i("invalid argument. Callback argument must be a function. Value: `%s`.",t))}else if(arguments.length)if(n(e))r={},o=e;else{if(!a(e))throw new TypeError(i("invalid argument. Options argument must be an object. Value: `%s`.",e));r=s({},e)}else r={};return r.objectMode=!0,void 0===o?new g(r):new g(r,o)}function w(e){var t;if(arguments.length){if(!a(e))throw new TypeError(i("invalid argument. Options argument must be an object. Value: `%s`.",e));t=s({},e)}else t={};return n;function n(e,n){return t.name=e,arguments.length>1?new g(t,n):new g(t)}}o(g,t),e(g,"objectMode",v),e(g,"factory",w);export{g as default,w as factory,v as objectMode};
//# sourceMappingURL=index.mjs.map
